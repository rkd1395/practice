<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>web05</display-name>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>Hello.jsp</welcome-file>
	</welcome-file-list>
	
	<resource-ref>
	<res-ref-name>jdbc/studydb</res-ref-name>
	<res-type>javax.sql.DataSource</res-type>
	<res-auth>Container</res-auth>
	</resource-ref>
	
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<context-param>
		<param-name>url</param-name>
		<param-value>jdbc:oracle:thin:@127.0.0.1:1521:XE</param-value>
	</context-param>
	<context-param>
		<param-name>driver</param-name>
		<param-value>oracle.jdbc.driver.OracleDriver</param-value>
	</context-param>
	<context-param>
		<param-name>id</param-name>
		<param-value>kms</param-value>
	</context-param>
	<context-param>
		<param-name>password</param-name>
		<param-value>1234</param-value>
	</context-param>
	
	<listener>
	<listener-class>listener.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 서블릿 객체는 클라이언트의 최초 요청 시 생성 되지만 load-on-startup을 1로 지정해주면 -->
	<!-- 해당 서블릿은 웹 애플리케이션이 시작될 때 자동으로 생성됨 여러개일 경우 먼저 선언된 것이 먼저 생성 -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>AppInitServlet</servlet-name> -->
<!-- 		<servlet-class>servlet.AppInitServlet</servlet-class> -->
<!-- 		<load-on-startup>1</load-on-startup> -->
<!-- 	</servlet> -->
	<servlet>
		<servlet-name>DispatcherServlet</servlet-name>
		<servlet-class>servlet.DispatcherServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DispatcherServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>Hello</servlet-name>
		<servlet-class>servlet.HelloServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>Hello</servlet-name>
		<url-pattern>/hello</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>Calc</servlet-name>
		<servlet-class>servlet.Calculator</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>Calc</servlet-name>
		<url-pattern>/calc</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>MemberList</servlet-name>
		<servlet-class>servlet.MemberListServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MemberList</servlet-name>
		<url-pattern>/member/list</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>MemberAdd</servlet-name>
		<servlet-class>servlet.MemberAddServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MemberAdd</servlet-name>
		<url-pattern>/member/add</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>MemberUpdate</servlet-name>
		<servlet-class>servlet.MemberUpdateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MemberUpdate</servlet-name>
		<url-pattern>/member/update</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>MemberDelete</servlet-name>
		<servlet-class>servlet.MemberDeleteServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MemberDelete</servlet-name>
		<url-pattern>/member/delete</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>Login</servlet-name>
		<servlet-class>servlet.LoginServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>Login</servlet-name>
		<url-pattern>/auth/login</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>Logout</servlet-name>
		<servlet-class>servlet.LogoutServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>Logout</servlet-name>
		<url-pattern>/auth/logout</url-pattern>
	</servlet-mapping>
</web-app>